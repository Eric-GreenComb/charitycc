// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TestArray struct {
	Key    string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (m *TestArray) Reset()                    { *m = TestArray{} }
func (m *TestArray) String() string            { return proto.CompactTextString(m) }
func (*TestArray) ProtoMessage()               {}
func (*TestArray) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type TestMap struct {
	Key    string            `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Txouts map[string]string `protobuf:"bytes,2,rep,name=txouts" json:"txouts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TestMap) Reset()                    { *m = TestMap{} }
func (m *TestMap) String() string            { return proto.CompactTextString(m) }
func (*TestMap) ProtoMessage()               {}
func (*TestMap) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *TestMap) GetTxouts() map[string]string {
	if m != nil {
		return m.Txouts
	}
	return nil
}

func init() {
	proto.RegisterType((*TestArray)(nil), "protos.TestArray")
	proto.RegisterType((*TestMap)(nil), "protos.TestMap")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0xa6, 0x5c, 0x9c, 0x21,
	0xa9, 0xc5, 0x25, 0x8e, 0x45, 0x45, 0x89, 0x95, 0x42, 0x02, 0x5c, 0xcc, 0xd9, 0xa9, 0x95, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x90, 0x18, 0x17, 0x5b, 0x59, 0x62, 0x4e, 0x69,
	0x6a, 0xb1, 0x04, 0x93, 0x02, 0xb3, 0x06, 0x67, 0x10, 0x94, 0xa7, 0xd4, 0xcd, 0xc8, 0xc5, 0x0e,
	0xd2, 0xe7, 0x9b, 0x58, 0x80, 0x45, 0x97, 0x31, 0x17, 0x5b, 0x49, 0x45, 0x7e, 0x69, 0x09, 0x44,
	0x17, 0xb7, 0x91, 0x34, 0xc4, 0xd2, 0x62, 0x3d, 0xa8, 0x16, 0xbd, 0x10, 0xb0, 0xac, 0x6b, 0x5e,
	0x49, 0x51, 0x65, 0x10, 0x54, 0xa9, 0x94, 0x25, 0x17, 0x37, 0x92, 0x30, 0x16, 0x53, 0x45, 0xb8,
	0x58, 0xc1, 0xb6, 0x4b, 0x30, 0x81, 0xc5, 0x20, 0x1c, 0x2b, 0x26, 0x0b, 0xc6, 0x24, 0x88, 0x67,
	0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8a, 0xee, 0xd1, 0xdc, 0xe1, 0x00, 0x00, 0x00,
}
