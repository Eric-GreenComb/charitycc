// Code generated by protoc-gen-go.
// source: process.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ProcessDonored model
type ProcessDonored struct {
	DonorUUID           string `protobuf:"bytes,1,opt,name=donorUUID" json:"donorUUID,omitempty"`
	DonorAddr           string `protobuf:"bytes,2,opt,name=donorAddr" json:"donorAddr,omitempty"`
	SmartContractAddr   string `protobuf:"bytes,3,opt,name=smartContractAddr" json:"smartContractAddr,omitempty"`
	SmartContractName   string `protobuf:"bytes,4,opt,name=smartContractName" json:"smartContractName,omitempty"`
	FundName            string `protobuf:"bytes,5,opt,name=fundName" json:"fundName,omitempty"`
	ChannelName         string `protobuf:"bytes,6,opt,name=channelName" json:"channelName,omitempty"`
	Amount              uint64 `protobuf:"varint,7,opt,name=amount" json:"amount,omitempty"`
	SmartContractAmount uint64 `protobuf:"varint,8,opt,name=smartContractAmount" json:"smartContractAmount,omitempty"`
	ChannelAmount       uint64 `protobuf:"varint,9,opt,name=channelAmount" json:"channelAmount,omitempty"`
	FundAmount          uint64 `protobuf:"varint,10,opt,name=fundAmount" json:"fundAmount,omitempty"`
	Timestamp           int64  `protobuf:"varint,11,opt,name=timestamp" json:"timestamp,omitempty"`
	Remark              string `protobuf:"bytes,12,opt,name=remark" json:"remark,omitempty"`
}

func (m *ProcessDonored) Reset()                    { *m = ProcessDonored{} }
func (m *ProcessDonored) String() string            { return proto.CompactTextString(m) }
func (*ProcessDonored) ProtoMessage()               {}
func (*ProcessDonored) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

// ProcessDrawed model
type ProcessDrawed struct {
	DrawUUID          string `protobuf:"bytes,1,opt,name=drawUUID" json:"drawUUID,omitempty"`
	SmartContractAddr string `protobuf:"bytes,2,opt,name=smartContractAddr" json:"smartContractAddr,omitempty"`
	BargainAddr       string `protobuf:"bytes,3,opt,name=bargainAddr" json:"bargainAddr,omitempty"`
	BargainName       string `protobuf:"bytes,4,opt,name=bargainName" json:"bargainName,omitempty"`
	Amount            uint64 `protobuf:"varint,5,opt,name=amount" json:"amount,omitempty"`
	DonorName         string `protobuf:"bytes,6,opt,name=donorName" json:"donorName,omitempty"`
	AcceptName        string `protobuf:"bytes,7,opt,name=acceptName" json:"acceptName,omitempty"`
	Timestamp         int64  `protobuf:"varint,8,opt,name=timestamp" json:"timestamp,omitempty"`
	Remark            string `protobuf:"bytes,9,opt,name=remark" json:"remark,omitempty"`
}

func (m *ProcessDrawed) Reset()                    { *m = ProcessDrawed{} }
func (m *ProcessDrawed) String() string            { return proto.CompactTextString(m) }
func (*ProcessDrawed) ProtoMessage()               {}
func (*ProcessDrawed) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func init() {
	proto.RegisterType((*ProcessDonored)(nil), "protos.ProcessDonored")
	proto.RegisterType((*ProcessDrawed)(nil), "protos.ProcessDrawed")
}

func init() { proto.RegisterFile("process.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x92, 0xdd, 0x4a, 0xc3, 0x40,
	0x10, 0x85, 0x49, 0xff, 0x33, 0xb5, 0x82, 0x2b, 0xc8, 0x22, 0x22, 0xa1, 0x78, 0xd1, 0x0b, 0x11,
	0xc1, 0x27, 0x10, 0x7b, 0xe3, 0x8d, 0x48, 0xa1, 0x0f, 0x30, 0xcd, 0xae, 0x5a, 0x74, 0x77, 0xc3,
	0x66, 0x4b, 0x9f, 0x49, 0xf0, 0x21, 0x65, 0x27, 0x69, 0x3b, 0xa1, 0xe9, 0x55, 0x32, 0xe7, 0x7c,
	0x84, 0xc9, 0x39, 0x03, 0x93, 0xc2, 0xbb, 0x5c, 0x97, 0xe5, 0x43, 0xe1, 0x5d, 0x70, 0x62, 0x40,
	0x8f, 0x72, 0xfa, 0xd7, 0x85, 0xf3, 0xf7, 0xca, 0x99, 0x3b, 0xeb, 0xbc, 0x56, 0xe2, 0x06, 0x52,
	0x15, 0x5f, 0x97, 0xcb, 0xd7, 0xb9, 0x4c, 0xb2, 0x64, 0x96, 0x2e, 0x0e, 0xc2, 0xde, 0x7d, 0x56,
	0xca, 0xcb, 0x0e, 0x73, 0xa3, 0x20, 0xee, 0xe1, 0xa2, 0x34, 0xe8, 0xc3, 0x8b, 0xb3, 0xc1, 0x63,
	0x1e, 0x88, 0xea, 0x12, 0x75, 0x6c, 0x1c, 0xd1, 0x6f, 0x68, 0xb4, 0xec, 0xb5, 0xd0, 0xd1, 0x10,
	0xd7, 0x30, 0xfa, 0xd8, 0x58, 0x45, 0x50, 0x9f, 0xa0, 0xfd, 0x2c, 0x32, 0x18, 0xe7, 0x5f, 0x68,
	0xad, 0xfe, 0x21, 0x7b, 0x40, 0x36, 0x97, 0xc4, 0x15, 0x0c, 0xd0, 0xb8, 0x8d, 0x0d, 0x72, 0x98,
	0x25, 0xb3, 0xde, 0xa2, 0x9e, 0xc4, 0x23, 0x5c, 0x36, 0x17, 0xab, 0xa0, 0x11, 0x41, 0x6d, 0x96,
	0xb8, 0x83, 0x49, 0xfd, 0xe1, 0x9a, 0x4d, 0x89, 0x6d, 0x8a, 0xe2, 0x16, 0x20, 0x6e, 0x57, 0x23,
	0x40, 0x08, 0x53, 0x62, 0x8e, 0x61, 0x6d, 0x74, 0x19, 0xd0, 0x14, 0x72, 0x9c, 0x25, 0xb3, 0xee,
	0xe2, 0x20, 0xc4, 0x6d, 0xbd, 0x36, 0xe8, 0xbf, 0xe5, 0x19, 0xfd, 0x4a, 0x3d, 0x4d, 0x7f, 0x3b,
	0x30, 0xd9, 0xd5, 0xe5, 0x71, 0xab, 0x55, 0x4c, 0x45, 0x79, 0xdc, 0xb2, 0xb2, 0xf6, 0x73, 0x7b,
	0x1b, 0x9d, 0x53, 0x6d, 0x64, 0x30, 0x5e, 0xa1, 0xff, 0xc4, 0xb5, 0x65, 0xad, 0x71, 0x89, 0x11,
	0xac, 0x29, 0x2e, 0xb1, 0x94, 0xfb, 0x8d, 0x94, 0x77, 0x57, 0xc3, 0xda, 0x39, 0x08, 0x31, 0x2b,
	0xcc, 0x73, 0x5d, 0x54, 0x07, 0x30, 0x24, 0x9b, 0x29, 0xcd, 0xac, 0x46, 0xa7, 0xb3, 0x4a, 0x79,
	0x56, 0xab, 0xea, 0xc4, 0x9f, 0xfe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x2b, 0xcf, 0x16, 0x0b, 0xfa,
	0x02, 0x00, 0x00,
}
